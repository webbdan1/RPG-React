{"ast":null,"code":"import _toConsumableArray from\"/home/daniel/PycharmProjects/react-rpg/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/daniel/PycharmProjects/react-rpg/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/daniel/PycharmProjects/react-rpg/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import'./App.css';import Wordlist from'./wordlist.js';import Checkbox from'./components/Checkbox';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState({length:16,passphrase:false,uppercase:true,lowercase:true,numbers:true,symbols:false}),_useState2=_slicedToArray(_useState,2),passwordGen=_useState2[0],setPasswordGen=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),handelText=_useState4[0],setHandelText=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),copied=_useState6[0],setCopied=_useState6[1];var handleChangePassphrase=function handleChangePassphrase(){setPasswordGen(_objectSpread(_objectSpread({},passwordGen),{},{passphrase:!passwordGen.passphrase}));};var handleChangeUppercase=function handleChangeUppercase(){setPasswordGen(_objectSpread(_objectSpread({},passwordGen),{},{uppercase:!passwordGen.uppercase}));};var handleChangeLowercase=function handleChangeLowercase(){setPasswordGen(_objectSpread(_objectSpread({},passwordGen),{},{lowercase:!passwordGen.lowercase}));};var handleChangeNumbers=function handleChangeNumbers(){setPasswordGen(_objectSpread(_objectSpread({},passwordGen),{},{numbers:!passwordGen.numbers}));};var handleChangeSymbols=function handleChangeSymbols(){setPasswordGen(_objectSpread(_objectSpread({},passwordGen),{},{symbols:!passwordGen.symbols}));};var setPasswordLength=function setPasswordLength(val){setPasswordGen(_objectSpread(_objectSpread({},passwordGen),{},{length:val}));};// Cryptographic replacement for Math.random()\nfunction randomNumberBetweenZeroAndOne(){var crypto=window.crypto||window.msCrypto;return crypto.getRandomValues(new Uint32Array(1))[0]/4294967295;}function generatePassword(){var numbersArray=[1,2,3,4,5,6,7,8,9,0];var symbolsArray=['!','@','#','$','%','^','&','*','(',')'];var characterCodes=Array.from(Array(26)).map(function(_e,i){return i+97;});var lowerCaseLetters=characterCodes.map(function(code){return String.fromCharCode(code);});var upperCaseLetters=lowerCaseLetters.map(function(letter){return letter.toUpperCase();});var passphrase=passwordGen.passphrase,length=passwordGen.length,uppercase=passwordGen.uppercase,lowercase=passwordGen.lowercase,numbers=passwordGen.numbers,symbols=passwordGen.symbols;var generateTheWord=function generateTheWord(length,uppercase,lowercase,numbers,symbols){var availableCharacters=[].concat(_toConsumableArray(lowercase?lowerCaseLetters:[]),_toConsumableArray(uppercase?upperCaseLetters:[]),_toConsumableArray(numbers?numbersArray:[]),_toConsumableArray(symbols?symbolsArray:[]));var shuffleArray=function shuffleArray(array){return array.sort(function(){return Math.random()-0.5;});};var characters=shuffleArray(availableCharacters).slice(0,length);setHandelText(characters.join(''));return characters;};var generateThePhrase=function generateThePhrase(length,uppercase,lowercase,numbers,symbols){var lowerSrc=Wordlist();var upperSrc=[];for(var i=0;i<lowerSrc.length;i++){var word=lowerSrc[i];var firstLetter=word.charAt(0);var firstLetterCap=firstLetter.toUpperCase();var remainingLetters=word.slice(1);var capitalizedWord=firstLetterCap+remainingLetters;upperSrc.push(capitalizedWord);}var availableCharacters=[].concat(_toConsumableArray(lowercase?lowerSrc:[]),_toConsumableArray(uppercase?upperSrc:[]));var availableNumbers=_toConsumableArray(numbers?numbersArray:[]);var availableSymbols=_toConsumableArray(symbols?symbolsArray:[]);//      // Empty array to be filled with wordlist\nvar generatedPasswordArray=[];//      // Grab a random word, push it to the password array\nfor(var j=0;j<parseInt(length);j++){var wordIndex=Math.floor(randomNumberBetweenZeroAndOne()*availableCharacters.length);var numIndex=Math.floor(randomNumberBetweenZeroAndOne()*numbersArray.length);var symIndex=Math.floor(randomNumberBetweenZeroAndOne()*symbolsArray.length);var totalWord='';if(availableCharacters.length){totalWord=totalWord+availableCharacters[wordIndex];}if(availableNumbers.length){totalWord=totalWord+availableNumbers[numIndex];}if(availableSymbols.length){totalWord=totalWord+availableSymbols[symIndex];}generatedPasswordArray.push(totalWord);}if(!numbers&&!symbols&&!uppercase&&!lowercase){setHandelText('');return'';}setHandelText(generatedPasswordArray.join('-'));return generatedPasswordArray;//      const shuffleArray = (array) => array.sort(() => Math.random() - 0.5);\n//      console.log(shuffleArray(availableCharacters).length);\n//      const characters = shuffleArray(availableCharacters).slice(0, length);\n//      setHandelText(characters.join(''));\n//      return characters;\n};if(passphrase){generateThePhrase(length,uppercase,lowercase,numbers,symbols);}else{generateTheWord(length,uppercase,lowercase,numbers,symbols);}}return/*#__PURE__*/_jsx(\"div\",{className:\"wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container wrapper-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Secure Offline Password / Passphrase Generator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:handelText,placeholder:\"\",autoComplete:\"off\",onChange:function onChange(e){return setHandelText(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-button\",onClick:function onClick(){if(handelText.length>0){navigator.clipboard.writeText(handelText);setCopied(true);setInterval(function(){setCopied(false);},2000);}},children:copied?'Copied!':'Copy text'})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-crieteria__box\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"label\",{children:\"Length\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"select\",{name:\"length\",length:true,value:passwordGen.length,onChange:function onChange(e){return setPasswordLength(parseInt(e.target.value));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"3\",children:\"3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"4\",children:\"4\"}),/*#__PURE__*/_jsx(\"option\",{value:\"8\",children:\"8\"}),/*#__PURE__*/_jsx(\"option\",{value:\"12\",children:\"12\"}),/*#__PURE__*/_jsx(\"option\",{value:\"16\",selected:true,children:\"16\"}),/*#__PURE__*/_jsx(\"option\",{value:\"20\",children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:\"24\",children:\"24\"}),/*#__PURE__*/_jsx(\"option\",{value:\"28\",children:\"28\"}),/*#__PURE__*/_jsx(\"option\",{value:\"32\",children:\"32\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-crieteria__box\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"label\",{children:\"Generate Passphrase?\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Checkbox,{value:passwordGen.passphrase,onChange:handleChangePassphrase})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-crieteria__box\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"label\",{children:\"Include uppercase letters? [A - Z]\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Checkbox,{value:passwordGen.uppercase,onChange:handleChangeUppercase})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-crieteria__box\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"label\",{children:\"Include lowercase letters? [a - z]\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Checkbox,{value:passwordGen.lowercase,onChange:handleChangeLowercase})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-crieteria__box\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"label\",{children:\"Include numbers? [0 - 9]\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Checkbox,{value:passwordGen.numbers,onChange:handleChangeNumbers})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-crieteria__box\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"label\",{children:\"Include symbols? [!, @, #, $, %, ^, &, *, (, )]\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Checkbox,{value:passwordGen.symbols,onChange:handleChangeSymbols})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"generate-button\",onClick:generatePassword,children:\"Generate password\"})}),\"Passwords / Passphrases are securely generated on your machine, meaning no data is sent over the internet. Strong passwords should not be memorable and should be changed frequently. Store in your favorite password manager to avoid the need to remember the password.\"]})});}export default App;","map":{"version":3,"sources":["/home/daniel/PycharmProjects/react-rpg/src/App.js"],"names":["useState","Wordlist","Checkbox","App","length","passphrase","uppercase","lowercase","numbers","symbols","passwordGen","setPasswordGen","handelText","setHandelText","copied","setCopied","handleChangePassphrase","handleChangeUppercase","handleChangeLowercase","handleChangeNumbers","handleChangeSymbols","setPasswordLength","val","randomNumberBetweenZeroAndOne","crypto","window","msCrypto","getRandomValues","Uint32Array","generatePassword","numbersArray","symbolsArray","characterCodes","Array","from","map","_e","i","lowerCaseLetters","code","String","fromCharCode","upperCaseLetters","letter","toUpperCase","generateTheWord","availableCharacters","shuffleArray","array","sort","Math","random","characters","slice","join","generateThePhrase","lowerSrc","upperSrc","word","firstLetter","charAt","firstLetterCap","remainingLetters","capitalizedWord","push","availableNumbers","availableSymbols","generatedPasswordArray","j","parseInt","wordIndex","floor","numIndex","symIndex","totalWord","e","target","value","navigator","clipboard","writeText","setInterval"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Wordlist from './wordlist.js'\n\nimport Checkbox from './components/Checkbox';\n\nfunction App() {\n  const [passwordGen, setPasswordGen] = useState({\n    length: 16,\n    passphrase: false,\n    uppercase: true,\n    lowercase: true,\n    numbers: true,\n    symbols: false,\n  });\n  const [handelText, setHandelText] = useState('');\n  const [copied, setCopied] = useState(false);\n\n  const handleChangePassphrase = () => {\n    setPasswordGen({\n      ...passwordGen,\n      passphrase: !passwordGen.passphrase,\n    });\n  };\n\n  const handleChangeUppercase = () => {\n    setPasswordGen({\n      ...passwordGen,\n      uppercase: !passwordGen.uppercase,\n    });\n  };\n\n  const handleChangeLowercase = () => {\n    setPasswordGen({\n      ...passwordGen,\n      lowercase: !passwordGen.lowercase,\n    });\n  };\n\n  const handleChangeNumbers = () => {\n    setPasswordGen({\n      ...passwordGen,\n      numbers: !passwordGen.numbers,\n    });\n  };\n\n  const handleChangeSymbols = () => {\n    setPasswordGen({\n      ...passwordGen,\n      symbols: !passwordGen.symbols,\n    });\n  };\n\n  const setPasswordLength = (val) => {\n    setPasswordGen({\n      ...passwordGen,\n      length: val,\n    });\n  };\n\n// Cryptographic replacement for Math.random()\nfunction randomNumberBetweenZeroAndOne() {\n  var crypto = window.crypto || window.msCrypto;\n  return crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\n}\n\n  function generatePassword() {\n    const numbersArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n    const symbolsArray = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')'];\n\n    const characterCodes = Array.from(Array(26)).map((_e, i) => i + 97);\n    const lowerCaseLetters = characterCodes.map((code) =>\n      String.fromCharCode(code)\n    );\n    const upperCaseLetters = lowerCaseLetters.map((letter) =>\n      letter.toUpperCase()\n    );\n\n    const { passphrase, length, uppercase, lowercase, numbers, symbols } = passwordGen;\n\n    const generateTheWord = (\n      length,\n      uppercase,\n      lowercase,\n      numbers,\n      symbols\n    ) => {\n      const availableCharacters = [\n        ...(lowercase ? lowerCaseLetters : []),\n        ...(uppercase ? upperCaseLetters : []),\n        ...(numbers ? numbersArray : []),\n        ...(symbols ? symbolsArray : []),\n      ];\n\n      const shuffleArray = (array) => array.sort(() => Math.random() - 0.5);\n      const characters = shuffleArray(availableCharacters).slice(0, length);\n      setHandelText(characters.join(''));\n      return characters;\n    };\n\n    const generateThePhrase = (\n      length,\n      uppercase,\n      lowercase,\n      numbers,\n      symbols\n    ) => {\n        const lowerSrc = Wordlist();\n        const upperSrc = [];\n        for (var i = 0; i < lowerSrc.length; i++) {\n          var word = lowerSrc[i];\n          var firstLetter = word.charAt(0);\n          var firstLetterCap = firstLetter.toUpperCase();\n          var remainingLetters = word.slice(1);\n          var capitalizedWord = firstLetterCap + remainingLetters;\n          upperSrc.push(capitalizedWord);\n        }\n\n      const availableCharacters = [\n        ...(lowercase ? lowerSrc : []),\n        ...(uppercase ? upperSrc : []),\n      ];\n\n      const availableNumbers = [\n        ...(numbers ? numbersArray : [])\n      ]\n\n      const availableSymbols = [\n        ...(symbols ? symbolsArray : [])\n      ]\n\n//      // Empty array to be filled with wordlist\n      var generatedPasswordArray = [];\n//      // Grab a random word, push it to the password array\n      for (var j = 0; j < parseInt(length); j++) {\n          var wordIndex = Math.floor(randomNumberBetweenZeroAndOne() * availableCharacters.length);\n          var numIndex = Math.floor(randomNumberBetweenZeroAndOne() * numbersArray.length);\n          var symIndex = Math.floor(randomNumberBetweenZeroAndOne() * symbolsArray.length);\n          var totalWord='';\n          if (availableCharacters.length){\n            totalWord = totalWord + availableCharacters[wordIndex];\n          }\n          if (availableNumbers.length){\n             totalWord = totalWord + availableNumbers[numIndex];\n          }\n          if (availableSymbols.length){\n             totalWord = totalWord + availableSymbols[symIndex];\n          }\n          generatedPasswordArray.push(totalWord);\n      }\n\n      if (!numbers && !symbols && !uppercase && !lowercase){\n        setHandelText('');\n        return '';\n      }\n      setHandelText(generatedPasswordArray.join('-'));\n      return generatedPasswordArray;\n\n//      const shuffleArray = (array) => array.sort(() => Math.random() - 0.5);\n//      console.log(shuffleArray(availableCharacters).length);\n//      const characters = shuffleArray(availableCharacters).slice(0, length);\n//      setHandelText(characters.join(''));\n//      return characters;\n    };\n\n    if (passphrase){\n        generateThePhrase(length, uppercase, lowercase, numbers, symbols);\n    }\n    else{\n        generateTheWord(length, uppercase, lowercase, numbers, symbols);\n    }\n\n\n\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container wrapper-box\">\n        <h2>Secure Offline Password / Passphrase Generator</h2>\n        <div className=\"password-box\">\n          <input\n            type=\"text\"\n            value={handelText}\n            placeholder=\"\"\n            autoComplete=\"off\"\n            onChange={(e) => setHandelText(e.target.value)}\n          />\n          <button\n            className=\"copy-button\"\n            onClick={() => {\n              if (handelText.length > 0) {\n                navigator.clipboard.writeText(handelText);\n                setCopied(true);\n                setInterval(() => {\n                  setCopied(false);\n                }, 2000);\n              }\n            }}\n          >\n            {copied ? 'Copied!' : 'Copy text'}\n          </button>\n        </div>\n        <br />\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Length</label>\n          </div>\n          <div>\n                <select name=\"length\" length\n                value={passwordGen.length}\n                onChange={(e) => setPasswordLength(parseInt(e.target.value))}>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"8\">8</option>\n                <option value=\"12\">12</option>\n                <option value=\"16\" selected>16</option>\n                <option value=\"20\">20</option>\n                <option value=\"24\">24</option>\n                <option value=\"28\">28</option>\n                <option value=\"32\">32</option>\n                </select>\n\n          </div>\n        </div>\n          <div className=\"word-crieteria__box\">\n          <div>\n            <label>Generate Passphrase?</label>\n          </div>\n          <div>\n            <Checkbox\n\n              value={passwordGen.passphrase}\n              onChange={handleChangePassphrase}\n            />\n          </div>\n        </div>\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Include uppercase letters? [A - Z]</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.uppercase}\n              onChange={handleChangeUppercase}\n            />\n          </div>\n        </div>\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Include lowercase letters? [a - z]</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.lowercase}\n              onChange={handleChangeLowercase}\n            />\n          </div>\n        </div>\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Include numbers? [0 - 9]</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.numbers}\n              onChange={handleChangeNumbers}\n            />\n          </div>\n        </div>\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Include symbols? [!, @, #, $, %, ^, &, *, (, )]</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.symbols}\n              onChange={handleChangeSymbols}\n            />\n          </div>\n        </div>\n        <div>\n          <button className=\"generate-button\" onClick={generatePassword}>\n            Generate password\n          </button>\n\n        </div>\n        Passwords / Passphrases are securely generated on your machine, meaning no data is sent over the internet. Strong passwords\n        should not be memorable and should be changed frequently. Store in your favorite password manager to avoid\n        the need to remember the password.\n      </div>\n\n    </div>\n\n\n\n\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}