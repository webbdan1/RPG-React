{"ast":null,"code":"var _jsxFileName = \"/home/daniel/PycharmProjects/react-rpg/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Checkbox from './components/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [passwordGen, setPasswordGen] = useState({\n    length: 5,\n    uppercase: false,\n    lowercase: false,\n    numbers: false,\n    symbols: false\n  });\n  const [handelText, setHandelText] = useState('');\n  const [copied, setCopied] = useState(false);\n\n  const handleChangePassphrase = () => {\n    setPasswordGen({ ...passwordGen,\n      passphrase: !passwordGen.passphrase\n    });\n  };\n\n  const handleChangeUppercase = () => {\n    setPasswordGen({ ...passwordGen,\n      uppercase: !passwordGen.uppercase\n    });\n  };\n\n  const handleChangeLowercase = () => {\n    setPasswordGen({ ...passwordGen,\n      lowercase: !passwordGen.lowercase\n    });\n  };\n\n  const handleChangeNumbers = () => {\n    setPasswordGen({ ...passwordGen,\n      numbers: !passwordGen.numbers\n    });\n  };\n\n  const handleChangeSymbols = () => {\n    setPasswordGen({ ...passwordGen,\n      symbols: !passwordGen.symbols\n    });\n  };\n\n  const setPasswordLength = val => {\n    setPasswordGen({ ...passwordGen,\n      length: val\n    });\n  };\n\n  function generatePassword() {\n    const numbersArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n    const symbolsArray = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')'];\n    const characterCodes = Array.from(Array(26)).map((_e, i) => i + 97);\n    const lowerCaseLetters = characterCodes.map(code => String.fromCharCode(code));\n    const upperCaseLetters = lowerCaseLetters.map(letter => letter.toUpperCase());\n    const {\n      length,\n      uppercase,\n      lowercase,\n      numbers,\n      symbols\n    } = passwordGen;\n\n    const generateTheWord = (length, uppercase, lowercase, numbers, symbols) => {\n      const availableCharacters = [...(lowercase ? lowerCaseLetters : []), ...(uppercase ? upperCaseLetters : []), ...(numbers ? numbersArray : []), ...(symbols ? symbolsArray : [])];\n\n      const shuffleArray = array => array.sort(() => Math.random() - 0.5);\n\n      const characters = shuffleArray(availableCharacters).slice(0, length);\n      setHandelText(characters.join(''));\n      return characters;\n    };\n\n    if (passphrase) {\n      generateTheWord(length, uppercase, lowercase, numbers, symbols);\n    } else {\n      generateTheWord(length, uppercase, lowercase, numbers, symbols);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container wrapper-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Secure Offline Password / Passphrase Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: handelText,\n          placeholder: \"\",\n          autoComplete: \"off\",\n          onChange: e => setHandelText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-button\",\n          onClick: () => {\n            if (handelText.length > 0) {\n              navigator.clipboard.writeText(handelText);\n              setCopied(true);\n              setInterval(() => {\n                setCopied(false);\n              }, 2000);\n            }\n          },\n          children: copied ? 'Copied!' : 'Copy text'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-crieteria__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"4\",\n            max: \"20\",\n            value: passwordGen.length,\n            onChange: e => setPasswordLength(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-crieteria__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Generate Passphrase?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: passwordGen.passphrase,\n            onChange: handleChangePassphrase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-crieteria__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Include uppercase letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: passwordGen.uppercase,\n            onChange: handleChangeUppercase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-crieteria__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Include lowercase letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: passwordGen.lowercase,\n            onChange: handleChangeLowercase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-crieteria__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Include numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: passwordGen.numbers,\n            onChange: handleChangeNumbers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-crieteria__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Include symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: passwordGen.symbols,\n            onChange: handleChangeSymbols\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-button\",\n          onClick: generatePassword,\n          children: \"Generate password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), \"Passwords are securely generated on your machine, meaning no data is sent over the internet. Strong passwords should be difficult to remember and should be changed frequently. Store in your favorite password manager to avoid feeling compelled to store the password anywhere where it may be compromised.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mH07PQEaU2B3JhGylfjrnlyjSe4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/daniel/PycharmProjects/react-rpg/src/App.js"],"names":["useState","Checkbox","App","passwordGen","setPasswordGen","length","uppercase","lowercase","numbers","symbols","handelText","setHandelText","copied","setCopied","handleChangePassphrase","passphrase","handleChangeUppercase","handleChangeLowercase","handleChangeNumbers","handleChangeSymbols","setPasswordLength","val","generatePassword","numbersArray","symbolsArray","characterCodes","Array","from","map","_e","i","lowerCaseLetters","code","String","fromCharCode","upperCaseLetters","letter","toUpperCase","generateTheWord","availableCharacters","shuffleArray","array","sort","Math","random","characters","slice","join","e","target","value","navigator","clipboard","writeText","setInterval"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nimport Checkbox from './components/Checkbox';\n\nfunction App() {\n  const [passwordGen, setPasswordGen] = useState({\n    length: 5,\n    uppercase: false,\n    lowercase: false,\n    numbers: false,\n    symbols: false,\n  });\n  const [handelText, setHandelText] = useState('');\n  const [copied, setCopied] = useState(false);\n\n  const handleChangePassphrase = () => {\n    setPasswordGen({\n      ...passwordGen,\n      passphrase: !passwordGen.passphrase,\n    });\n  };\n\n  const handleChangeUppercase = () => {\n    setPasswordGen({\n      ...passwordGen,\n      uppercase: !passwordGen.uppercase,\n    });\n  };\n\n  const handleChangeLowercase = () => {\n    setPasswordGen({\n      ...passwordGen,\n      lowercase: !passwordGen.lowercase,\n    });\n  };\n\n  const handleChangeNumbers = () => {\n    setPasswordGen({\n      ...passwordGen,\n      numbers: !passwordGen.numbers,\n    });\n  };\n\n  const handleChangeSymbols = () => {\n    setPasswordGen({\n      ...passwordGen,\n      symbols: !passwordGen.symbols,\n    });\n  };\n\n  const setPasswordLength = (val) => {\n    setPasswordGen({\n      ...passwordGen,\n      length: val,\n    });\n  };\n\n  function generatePassword() {\n    const numbersArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n    const symbolsArray = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')'];\n\n    const characterCodes = Array.from(Array(26)).map((_e, i) => i + 97);\n    const lowerCaseLetters = characterCodes.map((code) =>\n      String.fromCharCode(code)\n    );\n    const upperCaseLetters = lowerCaseLetters.map((letter) =>\n      letter.toUpperCase()\n    );\n\n    const { length, uppercase, lowercase, numbers, symbols } = passwordGen;\n\n    const generateTheWord = (\n      length,\n      uppercase,\n      lowercase,\n      numbers,\n      symbols\n    ) => {\n      const availableCharacters = [\n        ...(lowercase ? lowerCaseLetters : []),\n        ...(uppercase ? upperCaseLetters : []),\n        ...(numbers ? numbersArray : []),\n        ...(symbols ? symbolsArray : []),\n      ];\n      const shuffleArray = (array) => array.sort(() => Math.random() - 0.5);\n      const characters = shuffleArray(availableCharacters).slice(0, length);\n      setHandelText(characters.join(''));\n      return characters;\n    };\n\n    if (passphrase)\n    {\n        generateTheWord(length, uppercase, lowercase, numbers, symbols);\n    }\n    else\n    {\n        generateTheWord(length, uppercase, lowercase, numbers, symbols);\n    }\n\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container wrapper-box\">\n        <h2>Secure Offline Password / Passphrase Generator</h2>\n        <div className=\"password-box\">\n          <input\n            type=\"text\"\n            value={handelText}\n            placeholder=\"\"\n            autoComplete=\"off\"\n            onChange={(e) => setHandelText(e.target.value)}\n          />\n          <button\n            className=\"copy-button\"\n            onClick={() => {\n              if (handelText.length > 0) {\n                navigator.clipboard.writeText(handelText);\n                setCopied(true);\n                setInterval(() => {\n                  setCopied(false);\n                }, 2000);\n              }\n            }}\n          >\n            {copied ? 'Copied!' : 'Copy text'}\n          </button>\n        </div>\n        <br />\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Password length</label>\n          </div>\n          <div>\n            <input\n              type=\"number\"\n              min=\"4\"\n              max=\"20\"\n              value={passwordGen.length}\n              onChange={(e) => setPasswordLength(e.target.value)}\n            />\n          </div>\n        </div>\n          <div className=\"word-crieteria__box\">\n          <div>\n            <label>Generate Passphrase?</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.passphrase}\n              onChange={handleChangePassphrase}\n            />\n          </div>\n        </div>\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Include uppercase letters</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.uppercase}\n              onChange={handleChangeUppercase}\n            />\n          </div>\n        </div>\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Include lowercase letters</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.lowercase}\n              onChange={handleChangeLowercase}\n            />\n          </div>\n        </div>\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Include numbers</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.numbers}\n              onChange={handleChangeNumbers}\n            />\n          </div>\n        </div>\n        <div className=\"word-crieteria__box\">\n          <div>\n            <label>Include symbols</label>\n          </div>\n          <div>\n            <Checkbox\n              value={passwordGen.symbols}\n              onChange={handleChangeSymbols}\n            />\n          </div>\n        </div>\n        <div>\n          <button className=\"generate-button\" onClick={generatePassword}>\n            Generate password\n          </button>\n\n        </div>\n        Passwords are securely generated on your machine, meaning no data is sent over the internet. Strong passwords\n        should be difficult to remember and should be changed frequently. Store in your favorite password manager to avoid\n        feeling compelled to store the password anywhere where it may be compromised.\n      </div>\n\n    </div>\n\n\n\n\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}